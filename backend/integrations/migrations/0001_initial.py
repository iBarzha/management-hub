# Generated by Django 5.2.4 on 2025-07-29 17:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0003_sprint'),
        ('tasks', '0004_taskattachment_taskcomment'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GitHubIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.TextField()),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('github_id', models.CharField(max_length=100, unique=True)),
                ('login', models.CharField(max_length=100)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('company', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('public_repos', models.IntegerField(default=0)),
                ('followers', models.IntegerField(default=0)),
                ('following', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='github_integration', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'github_integrations',
            },
        ),
        migrations.CreateModel(
            name='GitHubRepository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('github_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=200)),
                ('full_name', models.CharField(max_length=400)),
                ('description', models.TextField(blank=True, null=True)),
                ('html_url', models.URLField()),
                ('clone_url', models.URLField()),
                ('ssh_url', models.CharField(max_length=500)),
                ('private', models.BooleanField(default=False)),
                ('fork', models.BooleanField(default=False)),
                ('archived', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(default=False)),
                ('default_branch', models.CharField(default='main', max_length=100)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('size', models.IntegerField(default=0)),
                ('stargazers_count', models.IntegerField(default=0)),
                ('watchers_count', models.IntegerField(default=0)),
                ('forks_count', models.IntegerField(default=0)),
                ('open_issues_count', models.IntegerField(default=0)),
                ('pushed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repositories', to='integrations.githubintegration')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='github_repositories', to='projects.project')),
            ],
            options={
                'db_table': 'github_repositories',
                'unique_together': {('integration', 'github_id')},
            },
        ),
        migrations.CreateModel(
            name='GitHubCommit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sha', models.CharField(max_length=40, unique=True)),
                ('message', models.TextField()),
                ('author_name', models.CharField(max_length=200)),
                ('author_email', models.EmailField(max_length=254)),
                ('author_login', models.CharField(blank=True, max_length=100, null=True)),
                ('committer_name', models.CharField(max_length=200)),
                ('committer_email', models.EmailField(max_length=254)),
                ('html_url', models.URLField()),
                ('additions', models.IntegerField(default=0)),
                ('deletions', models.IntegerField(default=0)),
                ('total_changes', models.IntegerField(default=0)),
                ('files_changed', models.JSONField(default=list)),
                ('github_created_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commits', to='integrations.githubrepository')),
            ],
            options={
                'db_table': 'github_commits',
                'ordering': ['-github_created_at'],
            },
        ),
        migrations.CreateModel(
            name='GitHubIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('github_id', models.CharField(max_length=100)),
                ('number', models.IntegerField()),
                ('title', models.CharField(max_length=500)),
                ('body', models.TextField(blank=True, null=True)),
                ('state', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', max_length=20)),
                ('html_url', models.URLField()),
                ('assignee_login', models.CharField(blank=True, max_length=100, null=True)),
                ('milestone_title', models.CharField(blank=True, max_length=200, null=True)),
                ('labels', models.JSONField(default=list)),
                ('comments', models.IntegerField(default=0)),
                ('locked', models.BooleanField(default=False)),
                ('author_association', models.CharField(blank=True, max_length=50, null=True)),
                ('github_created_at', models.DateTimeField()),
                ('github_updated_at', models.DateTimeField()),
                ('github_closed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='github_issues', to='tasks.task')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issues', to='integrations.githubrepository')),
            ],
            options={
                'db_table': 'github_issues',
                'unique_together': {('repository', 'github_id')},
            },
        ),
        migrations.CreateModel(
            name='GitHubWebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('github_id', models.CharField(max_length=100)),
                ('name', models.CharField(default='web', max_length=100)),
                ('active', models.BooleanField(default=True)),
                ('events', models.JSONField(default=list)),
                ('config', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='integrations.githubrepository')),
            ],
            options={
                'db_table': 'github_webhooks',
                'unique_together': {('repository', 'github_id')},
            },
        ),
    ]
