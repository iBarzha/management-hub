# Generated by Django 5.2.4 on 2025-07-30 15:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('integrations', '0002_slackintegration_slackchannel_slackmessage'),
        ('projects', '0003_sprint'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscordIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guild_id', models.CharField(max_length=100)),
                ('guild_name', models.CharField(max_length=200)),
                ('bot_token', models.TextField()),
                ('application_id', models.CharField(max_length=100)),
                ('permissions', models.BigIntegerField(default=0)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='discord_integration', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'discord_integrations',
                'unique_together': {('user', 'guild_id')},
            },
        ),
        migrations.CreateModel(
            name='DiscordChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.CharField(max_length=100, unique=True)),
                ('channel_name', models.CharField(max_length=200)),
                ('channel_type', models.CharField(choices=[('text', 'Text Channel'), ('voice', 'Voice Channel'), ('category', 'Category'), ('news', 'News Channel'), ('stage', 'Stage Channel'), ('forum', 'Forum Channel')], default='text', max_length=20)),
                ('parent_id', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.IntegerField(default=0)),
                ('nsfw', models.BooleanField(default=False)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('notification_types', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discord_channels', to='projects.project')),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='integrations.discordintegration')),
            ],
            options={
                'db_table': 'discord_channels',
                'unique_together': {('integration', 'channel_id')},
            },
        ),
        migrations.CreateModel(
            name='DiscordMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('notification', 'Notification'), ('command_response', 'Command Response'), ('webhook', 'Webhook'), ('embed', 'Rich Embed')], default='notification', max_length=20)),
                ('discord_message_id', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.TextField(blank=True)),
                ('embeds', models.JSONField(default=list)),
                ('components', models.JSONField(default=list)),
                ('attachments', models.JSONField(default=list)),
                ('user_id', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('sent_successfully', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='integrations.discordchannel')),
            ],
            options={
                'db_table': 'discord_messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiscordCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_name', models.CharField(max_length=100)),
                ('command_type', models.CharField(choices=[('slash', 'Slash Command'), ('prefix', 'Prefix Command'), ('context', 'Context Menu')], default='slash', max_length=20)),
                ('description', models.TextField()),
                ('enabled', models.BooleanField(default=True)),
                ('permissions_required', models.JSONField(default=list)),
                ('usage_count', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commands', to='integrations.discordintegration')),
            ],
            options={
                'db_table': 'discord_commands',
                'unique_together': {('integration', 'command_name')},
            },
        ),
        migrations.CreateModel(
            name='DiscordRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.CharField(max_length=100, unique=True)),
                ('role_name', models.CharField(max_length=200)),
                ('color', models.CharField(default='#000000', max_length=7)),
                ('permissions', models.BigIntegerField(default=0)),
                ('position', models.IntegerField(default=0)),
                ('mentionable', models.BooleanField(default=False)),
                ('hoisted', models.BooleanField(default=False)),
                ('managed', models.BooleanField(default=False)),
                ('sync_with_project_role', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='integrations.discordintegration')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discord_roles', to='projects.project')),
            ],
            options={
                'db_table': 'discord_roles',
                'unique_together': {('integration', 'role_id')},
            },
        ),
    ]
